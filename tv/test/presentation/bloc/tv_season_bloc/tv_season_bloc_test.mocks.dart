// Mocks generated by Mockito 5.1.0 from annotations
// in tv/test/presentation/bloc/tv_season_bloc/tv_season_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/common/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv/domain/entities/tv_season.dart' as _i7;
import 'package:tv/domain/repositories/tv_repository.dart' as _i2;
import 'package:tv/domain/usecases/get_tv_season.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvRepository_0 extends _i1.Fake implements _i2.TvRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTvSeason].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeason extends _i1.Mock implements _i4.GetTvSeason {
  MockGetTvSeason() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
          returnValue: _FakeTvRepository_0()) as _i2.TvRepository);
  @override
  set tvRepository(_i2.TvRepository? _tvRepository) =>
      super.noSuchMethod(Invocation.setter(#tvRepository, _tvRepository),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvSeason>> execute(
          int? tvId, int? seasonNumber) =>
      (super.noSuchMethod(Invocation.method(#execute, [tvId, seasonNumber]),
              returnValue: Future<_i3.Either<_i6.Failure, _i7.TvSeason>>.value(
                  _FakeEither_1<_i6.Failure, _i7.TvSeason>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.TvSeason>>);
}
